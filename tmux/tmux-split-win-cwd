#!/usr/bin/env sh

# Copyright (c) 2012 Brandon Orther <AbleCoder@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


# NAME
#   tmux-split-win-cwd -- tmux split-window with current working dir
#
# SYNOPSIS
#   tmux-split-win-cwd [-dhvP] [-i] [-p percentage|-l size] [-t target-pane]
#
#   NOTE: All options match tmux split-window except those noted below.
#
#   -c
#      Fix OSX clipboard by reattaching namespace.
#      TODO: Add more details and instruction.
#
#   -i
#      Inverse default split direction. For example if you split vertically by
#      (by passing -v) the default behavior is to create a new pane below and if
#      you spit horizontally (by passing -h) the default behavior is to create a
#      new pane to the right. With the -i argument passed the pane will be
#      created in the opposite of the default direction. So -v -i will create a
#      new pane above and -h -i will create a new pane to the left.
#
#      NOTE: The inversion of direction is created by running a swap-pane after
#            creating the new pane.
#
#   [command]
#     REMOVED - The optional split-window [command] argument is removed.
#
# DESCRIPTION
#   This script creates a new tmux pane by splitting a window and setting the
#   new pane's path to the current working dir of the shell that calls it.
#
#   Useful for creating splits in tmux windows designated for a specific project.
#   Instead of having to `cd` from the path that tmux was started at to the path
#   of the window you create the pane from, this script automatically changes the
#   new pane's path.


# INSTALL AND USAGE
#
# 1. Download this script to your how folder and give it permissions to execute:
#
#   $ wget https://raw.github.com/AbleCoder/dotfiles/master/tmux/tmux-split-win-cwd -O ~/tmux-split-win-cwd
#   $ chmod +x ~/tmux-split-win-cwd
#
# 2. Split window and test new pane's cur dir
#
#   (in tmux window shell)
#   $ cd /
#   $ ~/tmux-split-win-cwd -v
#
#   (in new tmux pane shell, should output: /)
#   $ pwd
#
#
# MY PERSONAL TMUX SPLIT WIN BINDINGS (In OSX so using the -c flag)
#
#   Bindings below are set in ~/.tmux.conf:
#
#      bind \ send-keys " ~/tmux-split-win-cwd -h -i -c" c-m
#      bind | send-keys " ~/tmux-split-win-cwd -h -c" c-m
#      bind - send-keys " ~/tmux-split-win-cwd -v -i -c" c-m
#      bind _ send-keys " ~/tmux-split-win-cwd -v -c" c-m
#
#   With the above bindings set you get the following behaviors:
#
#      <prefix>+\ (Create new pane to the left)
#      <prefix>+| (Create new pane to the right)
#      <prefix>+- (Create new pane above)
#      <prefix>+_ (Create new pane below)
#
set -o nounset

# default values
start_shell_cmd="${SHELL}"
inverse_split=0

# get source pane details
src_pane_dir=`pwd`
src_pane_num=$(tmux display-message -p '#P')

# parse options
while getopts ":ci" opt; do
  case $opt in
    c)
      # set fix osx clipboard on shell start
      start_shell_cmd="reattach-to-user-namespace -l ${SHELL}"
      ;;
    i)
      # set inverse split command since -i flag passed
      inverse_split=1
      ;;
  esac
done

# clean args for tmux split-window
clean_args=${*/-[ci]/}

# create new split
tmux split-window $clean_args "cd ${src_pane_dir}; ${start_shell_cmd}"

# invert split direction if needed
if [ $inverse_split -eq 1 ]; then
  tmux swap-pane -s ${src_pane_num}
fi
